
@using BRO.Domain.Utilities.PaginationSearchByRules
@using BRO.Domain.Utilities.StaticDetails;
@model BRO.UI.ViewModels.PagedResultViewModel<BRO.Domain.Query.DTO.ApplicationUser.ApplicationUserDTO>
@{
    var searchBy = new ApplicationUserSearchByRules().SearchByList.FirstOrDefault();
    int index = Model.Result.ElementsFrom - 1;

}





<div class="row align-items-center mb-2 mt-5">
    <div class="col-6">
        <h3 class="text-secondary m-0 text-uppercase">Użytkownicy</h3>
    </div>
    <div class="col-6  text-end">
        @if(User.IsInRole(Roles.RoleAdmin))
        { 
            <a class="btn btn-outline-warning" asp-action="Create">Dodaj użytkownika</a>
        }
        
    </div>
</div>
<div class="row mb-5 align-items-center">
    <div class="col-12 col-lg-4  m-0 text-lg-center text-start pl12 ">
        <form asp-action="Index" method="get">
            <span class="btn-group">
                <input class="p-1 form-control" type="text" name="SearchValue" placeholder="Adres email" />
                <input type="text" name="SearchName" value="@searchBy" hidden />
                <button type="submit" class="p-1 btn btn-outline-warning ">Szukaj</button>
            </span>
        </form>
    </div>
    <div class="col-12 col-lg-4 p-0 m-lg-0  text-lg-center text-end mt-4 pe-sm-0 pe-3  ">
        Pokaż
        <select class="customSelect text-secondary border-secondary " asp-items='Model.PageSizes' onchange='ChangePageSize("Admin", "User", "Index", this, "@Model.SearchValue", "@Model.SearchName", "@Model.Result.SortBy")'>
        </select>
    </div>
    <div class="col-12 col-lg-4 p-0 m-0  mt-4  m-lg-0   text-lg-center text-end  pe-sm-0 pe-3 ">
        Sortuj
        <select class="customSelect text-secondary border-secondary " id="sortingElement" asp-items='Model.Sorting' onchange='ChangeSorting("Admin", "User", "Index", this, "@Model.SearchValue", "@Model.SearchName", "@Model.Result.CurrentPage", "@Model.Result.PageSize")'>
        </select>
    </div>
</div>
@if (@Model.Result.PageElements.Any())
{
    <div>
        <table class="table tb table-striped">
            <thead class="tab-pane">
                <tr>
                    <th scope="col">Nr</th>
                    <th scope="col">Email</th>
                    <th scope="col">Imię</th>
                    <th scope="col">Nazwisko</th>
                    <th scope="col">Rola</th>
                    <th scope="col">Blokowanie</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Result.PageElements)
                {
                    index = index + 1;

                    <tr>
                        <td data-label="Nr">
                            @index
                        </td>
                        <td data-label="Email">
                            @item.Email
                        </td>
                        <td data-label="Imię">
                            @item.FirstName
                        </td>
                        <td data-label="Nazwisko">
                            @if (@item.LastName == null)
                            {
                                <span>nie podano</span>
                            }
                            else
                            {
                                @item.LastName
                            }
                        </td>
                        <td data-label="Rola">
                            @item.RoleName

                        </td>
                        <td data-label="Blokowanie">

                            @if (item.RoleName != Roles.RoleAdmin && User.IsInRole(Roles.RoleAdmin))
                            {
                                <a class="text-danger" style="cursor:pointer" asp-action="Lockout" asp-route-id="@item.Id">Blokowanie</a>
                            }
                            else
                            {
                                <span class="text-secondary">Nie można</span>
                            }

                        </td>
                    </tr>
                }

            </tbody>
        </table>
    </div>

}
else
{
    <div class="border-2 border-secondary border row text-center mt-4 align-items-center p-2 mx-md-0 mx-3  ">
        <p class="fs-5 m-0 text-secondary">Brak użytkowników !!</p>
    </div>

}

<div class="container">
    @if (Model.Result.TotalPages > 1 && Model.Result.PageElements.Count() > 0)
    {
        <ul class="pagination justify-content-center  mb-0">
            @if (Model.Result.CurrentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link text-secondary" href="@Url.Action("Index","User",new {PageNumber=1, SearchName=Model.SearchName,SearchValue=Model.SearchValue, PageSize=Model.Result.PageSize, SortBy=Model.Result.SortBy })">Pierwsza</a>
                </li>
                <li class="page-item">
                    <a class="page-link text-secondary" href="@Url.Action("Index","User",new {PageNumber=Model.Result.CurrentPage-1, SearchName=Model.SearchName,SearchValue=Model.SearchValue, PageSize=Model.Result.PageSize, SortBy=Model.Result.SortBy })">Poprzednia</a>
                </li>
            }
            @for (var p = Model.Result.StartPage; p <= Model.Result.EndPage; p++)
            {
                <li class="page-item ">
                    <a class="page-link @(p==Model.Result.CurrentPage?"bg-warning":"")" href="@Url.Action("Index","User",new {PageNumber=p, SearchName=Model.SearchName,SearchValue=Model.SearchValue, PageSize=Model.Result.PageSize, SortBy=Model.Result.SortBy })">@p </a>
                </li>
            }
            @if (Model.Result.CurrentPage < Model.Result.TotalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index","User",new {PageNumber=Model.Result.CurrentPage+1, SearchName=Model.SearchName,SearchValue=Model.SearchValue, PageSize=Model.Result.PageSize, SortBy=Model.Result.SortBy })">Następna</a>
                </li>
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index","User",new {PageNumber=Model.Result.TotalPages, SearchName=Model.SearchName,SearchValue=Model.SearchValue, PageSize=Model.Result.PageSize, SortBy=Model.Result.SortBy})">Ostatnia</a>
                </li>
            }
        </ul>
    }
</div>
<partial name="_ActionPerformedResultPartial" />

@section Scripts
{
    <partial name="_ActionPerformedResultScriptsPartial" />
}

